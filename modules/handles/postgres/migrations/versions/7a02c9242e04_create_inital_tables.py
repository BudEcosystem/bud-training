"""create inital tables

Revision ID: 7a02c9242e04
Revises: 
Create Date: 2023-08-14 11:28:40.521128

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '7a02c9242e04'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('datasets',
    sa.Column('dataset_id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('source', sa.String(), nullable=True),
    sa.Column('source_type', sa.String(), nullable=False),
    sa.Column('type', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text("TIMEZONE('utc', CURRENT_TIMESTAMP)"), nullable=True),
    sa.Column('modified_at', sa.DateTime(timezone=True), server_default=sa.text("TIMEZONE('utc', CURRENT_TIMESTAMP)"), nullable=True),
    sa.PrimaryKeyConstraint('dataset_id')
    )
    op.create_table('models',
    sa.Column('model_id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('source', sa.String(), nullable=True),
    sa.Column('type', sa.Integer(), nullable=False),
    sa.Column('is_finetuned', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text("TIMEZONE('utc', CURRENT_TIMESTAMP)"), nullable=True),
    sa.Column('modified_at', sa.DateTime(timezone=True), server_default=sa.text("TIMEZONE('utc', CURRENT_TIMESTAMP)"), nullable=True),
    sa.PrimaryKeyConstraint('model_id')
    )
    op.create_table('pipelines',
    sa.Column('pipeline_id', sa.UUID(), nullable=False),
    sa.Column('dataset_id', sa.UUID(), nullable=True),
    sa.Column('base_model_id', sa.UUID(), nullable=True),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('type', sa.Integer(), nullable=False),
    sa.Column('params', sa.JSON(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text("TIMEZONE('utc', CURRENT_TIMESTAMP)"), nullable=True),
    sa.Column('modified_at', sa.DateTime(timezone=True), server_default=sa.text("TIMEZONE('utc', CURRENT_TIMESTAMP)"), nullable=True),
    sa.ForeignKeyConstraint(['base_model_id'], ['models.model_id'], ),
    sa.ForeignKeyConstraint(['dataset_id'], ['datasets.dataset_id'], ),
    sa.PrimaryKeyConstraint('pipeline_id')
    )
    op.create_table('serving_history',
    sa.Column('serving_id', sa.UUID(), nullable=False),
    sa.Column('model_id', sa.UUID(), nullable=True),
    sa.Column('endpoint', sa.String(), nullable=False),
    sa.Column('log_path', sa.String(), nullable=True),
    sa.Column('status', sa.Integer(), nullable=True),
    sa.Column('started_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('stopped_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text("TIMEZONE('utc', CURRENT_TIMESTAMP)"), nullable=True),
    sa.Column('modified_at', sa.DateTime(timezone=True), server_default=sa.text("TIMEZONE('utc', CURRENT_TIMESTAMP)"), nullable=True),
    sa.ForeignKeyConstraint(['model_id'], ['models.model_id'], ),
    sa.PrimaryKeyConstraint('serving_id')
    )
    op.create_table('runs',
    sa.Column('run_id', sa.UUID(), nullable=False),
    sa.Column('piepline_id', sa.UUID(), nullable=True),
    sa.Column('dataset_id', sa.UUID(), nullable=True),
    sa.Column('base_model_id', sa.UUID(), nullable=True),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('type', sa.Integer(), nullable=False),
    sa.Column('params', sa.JSON(), nullable=False),
    sa.Column('source', sa.String(), nullable=False),
    sa.Column('results', sa.JSON(), nullable=True),
    sa.Column('status', sa.Integer(), nullable=True),
    sa.Column('started_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('finished_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text("TIMEZONE('utc', CURRENT_TIMESTAMP)"), nullable=True),
    sa.Column('modified_at', sa.DateTime(timezone=True), server_default=sa.text("TIMEZONE('utc', CURRENT_TIMESTAMP)"), nullable=True),
    sa.ForeignKeyConstraint(['base_model_id'], ['models.model_id'], ),
    sa.ForeignKeyConstraint(['dataset_id'], ['datasets.dataset_id'], ),
    sa.ForeignKeyConstraint(['piepline_id'], ['pipelines.pipeline_id'], ),
    sa.PrimaryKeyConstraint('run_id')
    )
    op.create_table('runs_n_models',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('run_id', sa.UUID(), nullable=True),
    sa.Column('model_id', sa.UUID(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text("TIMEZONE('utc', CURRENT_TIMESTAMP)"), nullable=True),
    sa.Column('modified_at', sa.DateTime(timezone=True), server_default=sa.text("TIMEZONE('utc', CURRENT_TIMESTAMP)"), nullable=True),
    sa.ForeignKeyConstraint(['model_id'], ['models.model_id'], ),
    sa.ForeignKeyConstraint(['run_id'], ['runs.run_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('runs_n_models')
    op.drop_table('runs')
    op.drop_table('serving_history')
    op.drop_table('pipelines')
    op.drop_table('models')
    op.drop_table('datasets')
    # ### end Alembic commands ###
